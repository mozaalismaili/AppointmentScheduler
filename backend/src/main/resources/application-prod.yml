spring:
  profiles:
    active: prod
  
  datasource:
    url: ${DATABASE_URL:jdbc:mysql://localhost:3306/appointment_scheduler}
    username: ${DATABASE_USERNAME:root}
    password: ${DATABASE_PASSWORD:}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: false
        use_sql_comments: false
  
  security:
    user:
      name: ${ADMIN_USERNAME:admin}
      password: ${ADMIN_PASSWORD:admin}
  
  # Actuator configuration for production
  management:
    endpoints:
      web:
        exposure:
          include: health,info,metrics
        base-path: /actuator
    endpoint:
      health:
        show-details: when-authorized
        show-components: when-authorized
    metrics:
      export:
        prometheus:
          enabled: true

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:your-super-secret-jwt-key-change-in-production}
  expiration: ${JWT_EXPIRATION:86400000}

# Logging configuration for production
logging:
  level:
    root: WARN
    com.rihal.AppointmentScheduler: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/appointment-scheduler.log
    max-size: 10MB
    max-history: 30

# Server configuration
server:
  port: ${PORT:8080}
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

# CORS configuration for production
cors:
  allowed-origins: ${ALLOWED_ORIGINS:https://your-frontend-domain.com}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true
  max-age: 3600
